// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"
	threadreport "fgd-alterra-29/business/thread_report"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// AdminGetReports provides a mock function with given fields: ctx
func (_m *Repository) AdminGetReports(ctx context.Context) ([]threadreport.Domain, error) {
	ret := _m.Called(ctx)

	var r0 []threadreport.Domain
	if rf, ok := ret.Get(0).(func(context.Context) []threadreport.Domain); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]threadreport.Domain)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateReportThread provides a mock function with given fields: ctx, domain, my_id
func (_m *Repository) CreateReportThread(ctx context.Context, domain threadreport.Domain, my_id int) (threadreport.Domain, error) {
	ret := _m.Called(ctx, domain, my_id)

	var r0 threadreport.Domain
	if rf, ok := ret.Get(0).(func(context.Context, threadreport.Domain, int) threadreport.Domain); ok {
		r0 = rf(ctx, domain, my_id)
	} else {
		r0 = ret.Get(0).(threadreport.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, threadreport.Domain, int) error); ok {
		r1 = rf(ctx, domain, my_id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetThreadReportStat provides a mock function with given fields: ctx
func (_m *Repository) GetThreadReportStat(ctx context.Context) ([]threadreport.Domain, error) {
	ret := _m.Called(ctx)

	var r0 []threadreport.Domain
	if rf, ok := ret.Get(0).(func(context.Context) []threadreport.Domain); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]threadreport.Domain)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SearchReportsByCategory provides a mock function with given fields: ctx, category
func (_m *Repository) SearchReportsByCategory(ctx context.Context, category string) ([]threadreport.Domain, error) {
	ret := _m.Called(ctx, category)

	var r0 []threadreport.Domain
	if rf, ok := ret.Get(0).(func(context.Context, string) []threadreport.Domain); ok {
		r0 = rf(ctx, category)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]threadreport.Domain)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, category)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SolvedThreadReport provides a mock function with given fields: ctx, id
func (_m *Repository) SolvedThreadReport(ctx context.Context, id int) (threadreport.Domain, error) {
	ret := _m.Called(ctx, id)

	var r0 threadreport.Domain
	if rf, ok := ret.Get(0).(func(context.Context, int) threadreport.Domain); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(threadreport.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
