// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"
	threadsaves "fgd-alterra-29/business/thread_saves"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// GetSaveState provides a mock function with given fields: ctx, domain, id
func (_m *Repository) GetSaveState(ctx context.Context, domain threadsaves.Domain, id int) (threadsaves.Domain, error) {
	ret := _m.Called(ctx, domain, id)

	var r0 threadsaves.Domain
	if rf, ok := ret.Get(0).(func(context.Context, threadsaves.Domain, int) threadsaves.Domain); ok {
		r0 = rf(ctx, domain, id)
	} else {
		r0 = ret.Get(0).(threadsaves.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, threadsaves.Domain, int) error); ok {
		r1 = rf(ctx, domain, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewSave provides a mock function with given fields: ctx, domain, id
func (_m *Repository) NewSave(ctx context.Context, domain threadsaves.Domain, id int) (threadsaves.Domain, error) {
	ret := _m.Called(ctx, domain, id)

	var r0 threadsaves.Domain
	if rf, ok := ret.Get(0).(func(context.Context, threadsaves.Domain, int) threadsaves.Domain); ok {
		r0 = rf(ctx, domain, id)
	} else {
		r0 = ret.Get(0).(threadsaves.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, threadsaves.Domain, int) error); ok {
		r1 = rf(ctx, domain, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: ctx, domain, id
func (_m *Repository) Save(ctx context.Context, domain threadsaves.Domain, id int) (threadsaves.Domain, error) {
	ret := _m.Called(ctx, domain, id)

	var r0 threadsaves.Domain
	if rf, ok := ret.Get(0).(func(context.Context, threadsaves.Domain, int) threadsaves.Domain); ok {
		r0 = rf(ctx, domain, id)
	} else {
		r0 = ret.Get(0).(threadsaves.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, threadsaves.Domain, int) error); ok {
		r1 = rf(ctx, domain, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Unsave provides a mock function with given fields: ctx, domain, id
func (_m *Repository) Unsave(ctx context.Context, domain threadsaves.Domain, id int) (threadsaves.Domain, error) {
	ret := _m.Called(ctx, domain, id)

	var r0 threadsaves.Domain
	if rf, ok := ret.Get(0).(func(context.Context, threadsaves.Domain, int) threadsaves.Domain); ok {
		r0 = rf(ctx, domain, id)
	} else {
		r0 = ret.Get(0).(threadsaves.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, threadsaves.Domain, int) error); ok {
		r1 = rf(ctx, domain, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
