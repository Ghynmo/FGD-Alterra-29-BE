// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"
	reputations "fgd-alterra-29/business/reputations"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// CreateReputation provides a mock function with given fields: ctx, domain
func (_m *Repository) CreateReputation(ctx context.Context, domain reputations.Domain) (reputations.Domain, error) {
	ret := _m.Called(ctx, domain)

	var r0 reputations.Domain
	if rf, ok := ret.Get(0).(func(context.Context, reputations.Domain) reputations.Domain); ok {
		r0 = rf(ctx, domain)
	} else {
		r0 = ret.Get(0).(reputations.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, reputations.Domain) error); ok {
		r1 = rf(ctx, domain)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetReputationByUser provides a mock function with given fields: ctx, id
func (_m *Repository) GetReputationByUser(ctx context.Context, id int) (reputations.Domain, error) {
	ret := _m.Called(ctx, id)

	var r0 reputations.Domain
	if rf, ok := ret.Get(0).(func(context.Context, int) reputations.Domain); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(reputations.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
